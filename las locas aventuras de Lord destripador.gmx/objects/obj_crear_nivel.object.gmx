<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables que manjera el obj
confirmar=false;//al confirmar se pone en el camino enemigos elejidos en la oleada
oleada=0;//num de oleada act
carril=-1;//carril elejido
showcreature=false;

actOleada[0]="";
actOleada[1]="";
actOleada[2]="";

fin=false;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inician obstaculos seteables en el camino
obst[0]=o_orco;
obst[1]=o_cen_dmg;
obst[2]=o_cen_dmg_pozo;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inicia vector de camino vacio
for (i=0;i&lt;maxOleada;i++){
    for (j=0;j&lt;2;j++){
        nivel[i,j]=""; //i es seg actual,j carril;contenido seria el objeto a crear
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//control de seleccion y confirmar
confirmar=keyboard_check(vk_space);
mousePressed=mouse_check_button_pressed(mb_left);
if !(confirmar){    
    //check carril elegido
    if (mousePressed) and (carril==-1){
        if(mouse_x&lt;=carrilCentral+64)and(mouse_x&gt;=carrilCentral-64){
            carril=1    //carril central
        }else if(mouse_x&lt;carrilCentral-64){
            carril=0;   //carril izq
        }else{
            carril=2;   //carril der
        }
        //se muestran obstaculos
        showcreature=true;
        mousePressed=false;  
    }
    
    //se elige obstaculo
    if (mousePressed) and (showcreature){
        switch(mouse_x){//aumenta con la cant de obstaculos al igual q la creacion
            case 0://a definir
                actOleada[carril]=obst[0];//se guarda eleccion
            break;
            case 1:
                actOleada[carril]=obst[1]; 
            break;
            case 2:
                actOleada[carril]=obst[2];
            break;
        }
        //reinicio
        showcreature=false;
        mousePressed=false;
        carril=-1;
    }

    
}else if!(fin){
    //evitamos errores
    showcreature=false;
    mousePressed=false;
    carril=-1;
    //guardamos oleada confirmada en nivel
    nivel[oleada,0]=actOleada[0];
    nivel[oleada,1]=actOleada[1]; 
    nivel[oleada,2]=actOleada[2];
    //aumenta oleada
    oleada++;
    if oleada&lt;maxOleada{
        oleada++;
        confirmar=false;
    }else{
        fin=true;
    }
    //reinicia oleada act
    actOleada[0]="";
    actOleada[1]="";
    actOleada[2]="";   
}else if (fin){
    confirmar=false;
    fin=false;
    scr_salvar_nivel();
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
