<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sboton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//seteo del area segura
heightSeguro=view_hview[0];
widthSeguro=view_wview[0];
aspectRatioSeguro=widthSeguro/heightSeguro;

view_visible[0] = true;
view_enabled = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pantallla Adaptable por Ale 
/*
requiere una vista con el tama√±o del area segura, la camara siempre enfocara al centro.
*/
    
//seteo del Port
widthPort=round(window_get_width());
heightPort=round(window_get_height());
view_hport=heightPort;
view_wport=widthPort;
aspectRatioPort=widthPort/heightPort;
    
//caso pantalla mas ancha
if (aspectRatioPort&gt;aspectRatioSeguro){
    view_wview[0] = view_hview[0] * aspectRatioPort;
    view_wport = view_wview[0] / aspectRatioPort;
//caso de pantalla mas alta
}if(aspectRatioPort&lt;aspectRatioSeguro){
    view_hview[0] = view_wview[0] * (1/aspectRatioPort);
    view_hport = view_hview[0] / aspectRatioPort;     
}
//re dibujo la superficie y centro la vista
surface_resize(application_surface, view_wview[0], view_hview[0]);
view_xview[0]=round((room_width-view_wview[0])/2);  
view_yview[0]=round((room_height-view_hview[0])/2); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (aspectRatioPort &gt; 1){
    //landscape
    ww = heightSeguro * aspectRatioPort;
    hh = heightSeguro;
    display_set_gui_maximise((widthPort / ww), (heightPort / hh), 0, 0);
}else{
    //portrait
    ww = widthSeguro;
    hh = widthSeguro / aspectRatioSeguro;
    display_set_gui_maximise((widthPort / ww), (heightPort / hh), 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
